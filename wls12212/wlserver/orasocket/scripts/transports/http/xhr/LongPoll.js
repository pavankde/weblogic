"use strict";function isXDRrequired(){return"Microsoft Internet Explorer"===navigator.appName&&10>OraSocketGlobal.getIEVersion()}function LongPollRequest(){return isXDRrequired()?new XDomainRequest:new XMLHttpRequest}function encodingRequired(){return OraSocketGlobal.ENFORCE_ENCODING||navigator.userAgent.indexOf("Safari")>-1&&-1===navigator.userAgent.indexOf("Chrome")||navigator.userAgent.indexOf("Firefox")>-1||OraSocketGlobal.getIEVersion()>-1&&OraSocketGlobal.getIEVersion()<OraSocketGlobal.ENCODE_FOR_IE_BELOW}function LongPoll(e,t,o){var a=this;this.protocol="",this.readyState=LongPollStatic.CONNECTING,this.URL=this.url=t,this.binaryType="blob",this.onmessage=function(){},this.onopen=function(){},this.onclose=function(){},this.onerror=function(){};var r,n,l,s=e,i=!1;this.setReadyState=function(e){this.readyState=e},this.getProtocol=function(){return this.protocol};var c=function(){l=new LongPollRequest;var O=0,S=function(){var e,t,o={},s=!0;try{if(OraSocketGlobal.debugLevel>10)try{var c=l.getAllResponseHeaders();console.debug("All Response Headers:\n"+c)}catch(S){console.debug("No headers...?")}t=encodingRequired()?l.responseText:l.response,(void 0!==l.getResponseHeader&&("yes"===l.getResponseHeader(RequestParameter.names.CHAR_ENCODED)||"base16"===l.getResponseHeader(RequestParameter.names.CHAR_ENCODED))||encodingRequired())&&void 0!==t&&null!==t&&(OraSocketGlobal.debugLevel>10&&(console.debug("BaseXX encoded ["+t+"]"),console.debug("Encoded length:"+t.length)),t=OraSocketGlobal.baseXXdecode(t)),(void 0===t||null===t)&&(s=!1)}catch(S){s=!1}if(s){var g,u,d=O;if("string"==typeof t?(g=OraSocketGlobal.FramingUtils.string2ArrayBuffer(t),u=g):(g=t,u=new Uint8Array(g)),OraSocketGlobal.debugLevel>10){for(var b="",E=0;u.length>E;E++)b+="["+OraSocketGlobal.FramingUtils.formatHexa(u[E].toString(16),2)+"] ";console.debug("All the frames ("+u.length+") :"+b)}var R=!1;do{try{R=d+OraSocketGlobal.FramingUtils.getFrameLength(u,d)<=u.length}catch(S){R=!1}if(R){if(OraSocketGlobal.debugLevel>5){console.debug("From the backend Channel:");try{console.debug(". FrameIndex:"+d)}catch(S){}try{console.debug(". Frame Head:"+OraSocketGlobal.FramingUtils.dumpHeader(u,d))}catch(S){}try{console.debug(". Frame length:"+OraSocketGlobal.FramingUtils.getFrameLength(u,d)+" byte(s)")}catch(S){}try{console.debug(". Fin : "+OraSocketGlobal.FramingUtils.getFin(u,d))}catch(S){}try{console.debug(". OpCode : "+OraSocketGlobal.FramingUtils.readableOpCode(OraSocketGlobal.FramingUtils.getOpCode(u,d)))}catch(S){}try{console.debug(". Payload length : "+OraSocketGlobal.FramingUtils.getPayloadLength(u,d))}catch(S){}try{console.debug(". Mask ["+(1===OraSocketGlobal.FramingUtils.getMask(u,d)?OraSocketGlobal.FramingUtils.displayMask(OraSocketGlobal.FramingUtils.getMaskingKey(u,d)):"")+"]")}catch(S){}}if(OraSocketGlobal.debugLevel>10){for(var b="",k=OraSocketGlobal.FramingUtils.getFrameLength(u,d),E=d;d+k>E;E++)b+="["+OraSocketGlobal.FramingUtils.formatHexa(u[E].toString(16),2)+"] ";console.debug("Framed (len:"+k+") :"+b)}e="";var f=[0,0,0,0];1===OraSocketGlobal.FramingUtils.getMask(u,d)&&(f=OraSocketGlobal.FramingUtils.getMaskingKey(u,d));for(var N=OraSocketGlobal.FramingUtils.getPayloadOffset(u,d),_=d+N,G=_+OraSocketGlobal.FramingUtils.getPayloadLength(u,d),E=_;G>E;E++){if(OraSocketGlobal.debugLevel>30&&N+50>E){var v=u[E]^f[(E-_)%4];console.debug("Appending char ["+OraSocketGlobal.FramingUtils.formatHexa(u[E].toString(16),2)+"] => ["+OraSocketGlobal.FramingUtils.formatHexa(v.toString(16),2)+"]")}e+=String.fromCharCode(u[E]^f[(E-_)%4])}if(OraSocketGlobal.debugLevel>5){for(var m="",E=_;Math.min(_+50,e.length)>E;E++)m+="0x"+OraSocketGlobal.FramingUtils.formatHexa(e.charCodeAt(E).toString(16),2)+" ";console.debug("After de-masking:"),console.debug(m)}if(OraSocketGlobal.debugLevel>5&&OraSocketGlobal.FramingUtils.getOpCode(u,d)===OraSocketGlobal.FramingUtils.UTF_8_DATA&&console.debug("UTF_8_DATA (unmasked):"+e),OraSocketGlobal.debugLevel>5&&OraSocketGlobal.FramingUtils.getOpCode(u,d)===OraSocketGlobal.FramingUtils.BINARY_DATA&&console.debug("BINARY_DATA"),OraSocketGlobal.FramingUtils.getOpCode(u,d)===OraSocketGlobal.FramingUtils.TERMINATES_CONNECTION){var C,p;try{p=e.substring(2)}catch(S){}try{C=e.charCodeAt(0)<<8|e.charCodeAt(1)}catch(S){}OraSocketGlobal.debugLevel>5&&console.debug("TERMINATES_CONNECTION (unmasked):"+p),a.setReadyState(LongPollStatic.CLOSING),setTimeout(function(){a.onclose({code:C,reason:p})},0),i=!0}if(OraSocketGlobal.FramingUtils.getOpCode(u,d)===OraSocketGlobal.FramingUtils.PONG){if(OraSocketGlobal.debugLevel>5){var h=(new Date).getTime(),A="Received a PONG on the non-ping channel...";void 0!==n&&(A+=" "+(""+(h-n))+" ms."),n=h,console.debug(A)}void 0!==r&&clearTimeout(r),r=window.setTimeout(function(){T()},OraSocketGlobal.PING_INTERVAL)}if(e.length>0)try{if(o=e,OraSocketGlobal.FramingUtils.getOpCode(u,d)===OraSocketGlobal.FramingUtils.UTF_8_DATA)a.onmessage({data:o});else if(OraSocketGlobal.FramingUtils.getOpCode(u,d)===OraSocketGlobal.FramingUtils.TERMINATES_CONNECTION){o={};var I=e.charCodeAt(0),L=e.charCodeAt(1),C=I<<8|L,p=e.substring(2);if(OraSocketGlobal.debugLevel>5){console.debug("Terminate Code:"+OraSocketGlobal.readableCloseCode(C)+", reason:"+p);var y=(new Date).getTime();if(void 0!==n){var P="Since last pong:"+(""+(y-n))+" ms.";console.debug(P)}}}else if(OraSocketGlobal.FramingUtils.getOpCode(u,d)===OraSocketGlobal.FramingUtils.PING)a.send(e,OraSocketGlobal.FramingUtils.PONG);else{for(var U=new Uint8Array(o.length),E=0;o.length>E;E++)U[E]=o.charCodeAt(E);a.onmessage({data:U})}}catch(S){o=e,a.onmessage(o)}else OraSocketGlobal.FramingUtils.getOpCode(u,d)===OraSocketGlobal.FramingUtils.PING?a.send(e,OraSocketGlobal.FramingUtils.PONG):(OraSocketGlobal.FramingUtils.getOpCode(u,d)===OraSocketGlobal.FramingUtils.PONG||OraSocketGlobal.FramingUtils.getOpCode(u,d)===OraSocketGlobal.FramingUtils.TERMINATES_CONNECTION)&&(o={},OraSocketGlobal.FramingUtils.getOpCode(u,d)===OraSocketGlobal.FramingUtils.TERMINATES_CONNECTION&&(a.setReadyState(LongPollStatic.CLOSING),setTimeout(function(){a.onclose()},0),i=!0));d+=OraSocketGlobal.FramingUtils.getFrameLength(u,d),O=d}}while(R&&u.length>d)}},g=function(){try{var e;e=encodingRequired()?l.responseText:l.response,void 0!==e&&S()}catch(t){console.debug("Transfer Progressing, err:"+JSON.stringify(t))}},d=function(){try{if(l.getAllResponseHeaders){var t=l.getResponseHeader(RequestParameter.names.SUB_PROTOCOLS);if(void 0!==t&&null!==t&&(a.protocol=t),OraSocketGlobal.debugLevel>10){var o=l.getAllResponseHeaders();console.debug("All headers:\n"+o)}}var r;r=encodingRequired()?l.responseText:l.response,void 0!==r&&S(),O=0,i?OraSocketGlobal.debugLevel>5&&console.debug("["+(""+new Date)+"] Leaving."):(OraSocketGlobal.debugLevel>5&&console.debug("["+(""+new Date)+"] Client (transferComplete) ["+s+"] restarting long poll after receiving a message."),c(e))}catch(n){console.debug("Transfer Completed, err:"+JSON.stringify(n))}},b=function(e){var t="An error occurred while transferring the data";console.debug(t+":"+JSON.stringify(e)),a.onerror({err:t})};if(l.onprogress=g,l.onload=d,l.ontimeout=function(){console.debug("** XHR Timed out")},l.onerror=b,!encodingRequired())try{l.responseType="arraybuffer"}catch(E){console.debug("Error setting responseType:"+JSON.stringify(E))}if(t=t.replace("localhost","127.0.0.1"),l.setRequestHeader){l.open("POST",t,!0);try{LongPollStatic.setRequiredHeader(l,s,LongPollStatic.TRANSPORT,o),l.setRequestHeader(RequestParameter.names.CLIENT_OPERATION,WSOperation.WAIT_FOR_INPUT),l.setRequestHeader("Content-Type","application/octet-stream"),l.setRequestHeader("cache-control","no-cache"),l.setRequestHeader("pragma","no-cache"),l.setRequestHeader(RequestParameter.names.REQUIRE_ENCODING,encodingRequired()?"yes":"no")}catch(E){console.debug("Cannot set headers on this request:"+JSON.stringify(E)),l.abort();var R=LongPollStatic.appendToQueryString(t,s,LongPollStatic.TRANSPORT,o);R+="&"+RequestParameter.names.CLIENT_OPERATION+"="+WSOperation.WAIT_FOR_INPUT,R+="&"+RequestParameter.names.UNIQUE_REQ_ID+"="+(""+Math.random()),R+="&"+RequestParameter.names.REQUIRE_ENCODING+"="+(encodingRequired()?"yes":"no"),R+="&"+RequestParameter.names.CORS_REQUIRED+"="+"yes",OraSocketGlobal.debugLevel>10&&console.debug("Request becomes:"+R),l.open("POST",R,!0)}}else{var R=LongPollStatic.appendToQueryString(t,s,LongPollStatic.TRANSPORT,o);R+="&"+RequestParameter.names.CLIENT_OPERATION+"="+WSOperation.WAIT_FOR_INPUT,R+="&"+RequestParameter.names.UNIQUE_REQ_ID+"="+(""+Math.random()),R+="&"+RequestParameter.names.REQUIRE_ENCODING+"="+(encodingRequired()?"yes":"no"),R+="&"+RequestParameter.names.CORS_REQUIRED+"="+"yes",OraSocketGlobal.debugLevel>10&&console.debug("Request becomes:"+R),l.open("POST",R,!0)}try{OraSocketGlobal.debugLevel>20&&console.debug("Starting long poll..."),l.send(),OraSocketGlobal.debugLevel>20&&console.debug("Long poll started")}catch(E){console.debug("StartLongPoll error:"+E)}if(OraSocketGlobal.PING_ENABLED){var T=function(){try{var e=new XMLHttpRequest,n=!1;if(e.onreadystatechange=function(){try{var o="State :"+e.readyState+"/"+OraSocketGlobal.GnlUtils.decodeReadyState(e.readyState);o+=", status:"+OraSocketGlobal.GnlUtils.decodeStatus(e.status),e.readyState===OraSocketGlobal.XHR_LOADING||e.status===OraSocketGlobal.HTTP_OK||n||(n=!0,a.onerror({err:"Connection Lost (Ping, XHR) - 3 - HTTP "+OraSocketGlobal.GnlUtils.decodeStatus(e.status)}),OraSocketGlobal.debugLevel>1&&console.debug("Ping failed - 3: Connection lost ("+OraSocketGlobal.GnlUtils.decodeReadyState(e.readyState)+" - "+OraSocketGlobal.GnlUtils.decodeStatus(e.status)+")"),console.debug("PingXHR: "+o),void 0!==r&&clearTimeout(r),e.abort(),e.open("POST",t,LongPollStatic.PING_METHOD))}catch(l){}if(e.readyState===OraSocketGlobal.XHR_SOME_RESPONSE_BODY_RECEIVED||e.readyState===OraSocketGlobal.XHR_REQUEST_COMPLETED){try{n||void 0===e.status||e.status!==OraSocketGlobal.ERROR_INTERNET_CANNOT_CONNECT&&e.status!==OraSocketGlobal.ERROR_INTERNET_TIMEOUT&&e.status!==OraSocketGlobal.ERROR_INTERNET_NAME_NOT_RESOLVED&&e.status!==OraSocketGlobal.ERROR_INTERNET_CONNECTION_ABORTED&&e.status!==OraSocketGlobal.ERROR_INTERNET_CONNECTION_RESET&&e.status!==OraSocketGlobal.ERROR_HTTP_INVALID_SERVER_RESPONSE&&e.status!==OraSocketGlobal.HTTP_NO_DATA||(void 0!==r&&clearTimeout(r),e.abort(),e.open("POST",t,LongPollStatic.PING_METHOD),a.onerror({err:"Connection Lost (Ping, XHR) - 1"}),OraSocketGlobal.debugLevel>1&&console.debug("Ping failed - 1: Connection lost ("+OraSocketGlobal.GnlUtils.decodeReadyState(e.readyState)+")"))}catch(l){console.debug("error evaluating the status.")}if(e.readyState===OraSocketGlobal.XHR_REQUEST_COMPLETED&&e.status===OraSocketGlobal.HTTP_OK){var s,i;encodingRequired()?(s=e.responseText,null!==s&&(i=s)):(s=e.response,null!==s&&(i=new Uint8Array(s))),null===s||"yes"!==e.getResponseHeader(RequestParameter.names.CHAR_ENCODED)&&"base16"!==e.getResponseHeader(RequestParameter.names.CHAR_ENCODED)||(i=OraSocketGlobal.baseXXdecode(s)),null!==i&&void 0!==i&&0!==i.length&&OraSocketGlobal.debugLevel>10&&console.debug("Framed response:"+i.length+" byte(s)"+", Fin : "+OraSocketGlobal.FramingUtils.getFin(i)+", OpCode : "+OraSocketGlobal.FramingUtils.readableOpCode(OraSocketGlobal.FramingUtils.getOpCode(i))+", Payload length : "+OraSocketGlobal.FramingUtils.getPayloadLength(i)),null!==s&&0!==i.length&&(OraSocketGlobal.FramingUtils.getOpCode(i)===OraSocketGlobal.FramingUtils.PONG&&console.debug("The PING xhr received a PONG."),0!==OraSocketGlobal.FramingUtils.getPayloadLength(i)&&OraSocketGlobal.FramingUtils.getOpCode(i)===OraSocketGlobal.FramingUtils.PONG?console.debug("Payload size should be 0 for a pong."):OraSocketGlobal.FramingUtils.getOpCode(i)!==OraSocketGlobal.FramingUtils.PONG&&console.debug("OpCode is ["+OraSocketGlobal.FramingUtils.readableOpCode(OraSocketGlobal.FramingUtils.getOpCode(i))+"] after a PING...")),r=window.setTimeout(function(){T()},OraSocketGlobal.PING_INTERVAL)}}},e.open("POST",t,LongPollStatic.PING_METHOD),!encodingRequired())try{e.responseType="arraybuffer"}catch(l){}LongPollStatic.setRequiredHeader(e,s,LongPollStatic.TRANSPORT,o),e.setRequestHeader(RequestParameter.names.CLIENT_OPERATION,WSOperation.SEND_MESSAGE),e.setRequestHeader("Content-Type","application/octet-stream");var i=OraSocketGlobal.FramingUtils.frameMessage("",OraSocketGlobal.FramingUtils.PING,0),c=OraSocketGlobal.FramingUtils.binaryString(i);encodingRequired()&&(c=OraSocketGlobal.baseXXencode(i),e.setRequestHeader(RequestParameter.names.REQUIRE_ENCODING,"yes")),u(new RequestAndBody(e,c,"PING"))}catch(l){e.abort(),e.open("POST",t,LongPollStatic.PING_METHOD),void 0!==r&&clearTimeout(r),a.onerror({err:"Connection Lost (Ping, XHR) - 2"}),OraSocketGlobal.debugLevel>2&&(console.debug("Ping failed: Connection lost - 2"),console.debug("Ping failed - 2: Connection lost ("+OraSocketGlobal.GnlUtils.decodeReadyState(e.readyState)+")"))}};void 0===r&&(r=window.setTimeout(function(){T()},0))}},O=!1,S=0,g=function(e,a){var r=new XMLHttpRequest;if(r.open("POST",t,!0),!encodingRequired())try{r.responseType="arraybuffer"}catch(n){}LongPollStatic.setRequiredHeader(r,s,LongPollStatic.TRANSPORT,o),r.setRequestHeader(RequestParameter.names.CLIENT_OPERATION,WSOperation.SEND_MESSAGE),r.setRequestHeader("Content-Type","application/octet-stream");var l;if("string"!=typeof e&&"number"!=typeof e){if("Blob"===OraSocketGlobal.GnlUtils.getClass(e))return r.abort(),OraSocketGlobal.GnlUtils.processAsUInt8Array(e,g,function(){console.log("Trouble managing a Blob.")}),void 0;l=OraSocketGlobal.FramingUtils.frameMessage(e,void 0===a?OraSocketGlobal.FramingUtils.BINARY_DATA:a)}else l=OraSocketGlobal.FramingUtils.frameMessage(e,void 0===a?OraSocketGlobal.FramingUtils.UTF_8_DATA:a);r.setRequestHeader("cache-control","no-cache"),r.setRequestHeader("pragma","no-cache");var i=OraSocketGlobal.FramingUtils.binaryString(l);encodingRequired()&&(i=OraSocketGlobal.baseXXencode(l),r.setRequestHeader(RequestParameter.names.REQUIRE_ENCODING,"yes")),u(new RequestAndBody(r,i,"APP_REQUEST"))},u=function(e){OraSocketGlobal.requestQueue.enqueue(e),OraSocketGlobal.debugLevel>10&&console.debug("["+(""+new Date)+"] **** Request "+(e.getName().length>0?"["+e.getName()+"] ":"")+"has been enqueued. "+OraSocketGlobal.requestQueue.getSize()+" to go."),setTimeout(function(){O?OraSocketGlobal.debugLevel>10&&console.debug("Already on your case, please wait..., "+OraSocketGlobal.requestQueue.getSize()+" request(s) in the queue."):(OraSocketGlobal.debugLevel>10&&console.debug("Starting queue processing, "+OraSocketGlobal.requestQueue.getSize()+" request(s) in the queue."),d())},S)},d=function(){if(OraSocketGlobal.requestQueue.isEmpty())OraSocketGlobal.debugLevel>10&&console.debug("**** Queue empty. Done."),O=!1;else{O=!0;var e=OraSocketGlobal.requestQueue.dequeue(),t=e.getRequest(),o=e.getBody(),r=t.onload,n=function(o){if(t.readyState!==OraSocketGlobal.XHR_REQUEST_COMPLETED)OraSocketGlobal.debugLevel>10&&console.debug("~~~ In processRequestQueue, weird xhr.readyState:"+t.readyState+"/"+OraSocketGlobal.GnlUtils.decodeReadyState(t.readyState));else{var n;try{n=t.getResponseHeader(RequestParameter.names.SUB_PROTOCOLS),void 0!==n&&null!==n&&n.length>0&&(a.protocol=n),OraSocketGlobal.debugLevel>10&&console.debug(" -- Negotiated Protocol:"+n)}catch(l){console.log(l)}void 0!==r&&null!==r&&r(o),OraSocketGlobal.debugLevel>10&&console.debug("["+(""+new Date)+"] **** Request "+(e.getName().length>0?"["+e.getName()+"] ":"")+"has been PROCESSED. "+OraSocketGlobal.requestQueue.getSize()+" left."),OraSocketGlobal.requestQueue.isEmpty()?(OraSocketGlobal.debugLevel>10&&console.debug("**** Queue empty. Done."),O=!1):setTimeout(function(){d()},S)}};t.onreadystatechange=n;try{OraSocketGlobal.debugLevel>10&&console.debug("**** Function processRequestQueue, sending "+(e.getName().length>0?"["+e.getName()+"] ":"")),t.send(o)}catch(l){console.warn("A Message when dequeuing:"+JSON.stringify(l)),O=!1}}},b=function(e,a){OraSocketGlobal.debugLevel>10&&console.debug("Terminate request"),i=!0;var r=new XMLHttpRequest;if(r.onreadystatechange=function(){},r.open("POST",t,!0),!encodingRequired())try{r.responseType="arraybuffer"}catch(n){}LongPollStatic.setRequiredHeader(r,s,LongPollStatic.TRANSPORT,o),r.setRequestHeader("Content-Type","application/octet-stream"),r.setRequestHeader(RequestParameter.names.CLIENT_OPERATION,WSOperation.SEND_MESSAGE);var l="";if(arguments.length>0&&void 0!==e){var c=255&(65280&e)>>8,O=255&e;l+=String.fromCharCode(c),l+=String.fromCharCode(O);for(var S=0;(void 0!==a?a.length:0)>S;S++)l+=a.charAt(S)}var g=OraSocketGlobal.FramingUtils.frameMessage(l,OraSocketGlobal.FramingUtils.TERMINATES_CONNECTION),u=OraSocketGlobal.FramingUtils.binaryString(g);encodingRequired()&&(u=OraSocketGlobal.baseXXencode(g),r.setRequestHeader(RequestParameter.names.REQUIRE_ENCODING,"yes")),r.send(u)};this.send=function(e,t){if(a.readyState===LongPollStatic.CLOSED||a.readyState===LongPollStatic.CLOSING)throw{mess:"WebSocket is already in CLOSING or CLOSED state"};(void 0!==e&&0!==(""+e).length||void 0!==t)&&g(e,t)},this.close=function(e,t){if(a.setReadyState(LongPollStatic.CLOSING),void 0!==arguments&&0!==arguments.length&&arguments.length>2)throw new SyntaxError("close funtion takes 0 to 2 argument(s).");if(arguments.length>0&&void 0!==e){if(!OraSocketGlobal.validateCloseCode(e)){var o,n="Invalid close code ["+e+"]. Must be either 1000, or between 3000 and 4999. "+e+" is neither.";throw window.DOMException?(o=DOMException,o.code=DOMException.INVALID_ACCESS_ERR,o.message=n):o={name:"InvalidAccessError",code:15,message:n},o}if(arguments.length>1&&void 0!==t&&!OraSocketGlobal.validateCloseReason(t))throw new SyntaxError("Invalid close reason ["+t+"]. Length should be in [0, 123].")}l.abort();try{void 0!==e&&void 0!==t?b(e,t):void 0!==e?b(e):b()}catch(o){throw o}setTimeout(function(){a.onclose()},0),void 0!==r&&clearInterval(r),a.setReadyState(LongPollStatic.CLOSED)},this.quit=function(){this.close()},a.binaryType=window.Blob?"blob":"arraybuffer",a.setReadyState(LongPollStatic.OPEN),void 0!==o&&isXDRrequired()&&g("",OraSocketGlobal.FramingUtils.PING),c()}var PING_SYNCHRONOUSLY=!1,PING_ASYNCHRONOUSLY=!0,LongPollStatic={TRANSPORT:"XMLHttpRequest",PING_METHOD:PING_ASYNCHRONOUSLY,setRequiredHeader:function(e,t,o,a){if(e.setRequestHeader(RequestParameter.names.CLIENT_ID,t),e.setRequestHeader(RequestParameter.names.CLIENT_TRANSPORT,o),void 0!==a){for(var r="",n=0;a.length>n;n++)r+=(r.length>0?",":"")+a[n];e.setRequestHeader(RequestParameter.names.SUB_PROTOCOLS,r)}},appendToQueryString:function(e,t,o,a){var r="?";if(e.indexOf("?")>-1&&(r="&"),e+=r+RequestParameter.names.CLIENT_ID+"="+t,e+="&"+RequestParameter.names.CLIENT_TRANSPORT+"="+o,void 0!==a){for(var n="",l=0;a.length>l;l++)n+=(n.length>0?",":"")+a[l];e+="&"+RequestParameter.names.SUB_PROTOCOLS+"="+n}return e},CONNECTING:0,OPEN:1,CLOSING:2,CLOSED:3},RequestAndBody=function(e,t,o){var a=e,r=t,n=void 0===o?"":o;this.getRequest=function(){return a},this.getBody=function(){return r},this.getName=function(){return n}};