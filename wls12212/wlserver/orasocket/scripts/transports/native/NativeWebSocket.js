"use strict";function NativeWebSocket(e,t,o){var a=this;this.onmessage=function(){},this.onopen=function(){},this.onclose=function(){},this.onerror=function(){};var r;r=void 0===o?new e(t):new e(t,o),r.onmessage=function(e){a.onmessage(e)},r.onclose=function(e){a.onclose(e),void 0!==n&&clearInterval(n)},r.onopen=a.onopen,r.onerror=function(e){a.onerror(e),void 0!==n&&clearInterval(n)},this.send=function(e){void 0!==e&&0!==(""+e).length&&r.send(e)},this.close=function(e,t){if(void 0!==arguments&&0!==arguments.length&&arguments.length>2)throw new SyntaxError("close funtion takes 0 to 2 argument(s).");if(arguments.length>0&&void 0!==e){if(!OraSocketGlobal.validateCloseCode(e)){var o,l="Invalid close code ["+e+"]. Must be either 1000, or between 3000 and 4999. "+e+" is neither.";throw window.DOMException?(o=DOMException,o.code=DOMException.INVALID_ACCESS_ERR,o.message=l):o={name:"InvalidAccessError",code:15,message:l},o}if(arguments.length>1&&void 0!==t&&!OraSocketGlobal.validateCloseReason(t))throw new SyntaxError("Invalid close reason ["+t+"]. Length should be in [0, 123].")}try{void 0!==e&&void 0!==t?r.close(e,t):void 0!==e?r.close(e):r.close()}catch(o){throw o}a.onclose(),void 0!==n&&clearInterval(n)},this.getReadyState=function(){return void 0!==r.readyState?r.readyState:NativeWebSocketStatic.WebSocketReadyState.CLOSED},this.getProtocol=function(){return void 0!==r.protocol?r.protocol:""};var n;this.quit=function(){try{void 0!==n&&clearInterval(n)}catch(e){console.log("(Native) quit:"+JSON.stringify(e))}},this.protocol=r.protocol,this.readyState=r.readyState,this.binaryType=r.binaryType,this.extensions=r.extensions}var NativeWebSocketStatic={TRANSPORT:"WebSocket",WebSocketReadyState:{CONNECTING:0,OPEN:1,CLOSING:2,CLOSED:3}};