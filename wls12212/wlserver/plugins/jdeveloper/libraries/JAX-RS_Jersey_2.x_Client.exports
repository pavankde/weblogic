<?xml version="1.0" encoding="iso-8859-1" ?>
<lib-exports owner="weblogic" xmlns="http://xmlns.oracle.com/ide/export">
    <package name="javax.ws.rs.ext"/>
    <package name="javax.ws.rs.core"/>
    <package name="javax.ws.rs.container"/>
    <package name="javax.ws.rs.client"/>
    <package name="javax.ws.rs"/>
    <package name="javax.validation.spi"/>
    <package name="javax.validation.metadata"/>
    <package name="javax.validation.groups"/>
    <package name="javax.validation.executable"/>
    <package name="javax.validation.constraintvalidation"/>
    <package name="javax.validation.constraints"/>
    <package name="javax.validation.bootstrap"/>
    <package name="javax.validation"/>
    <package name="javax.persistence.spi"/>
    <package name="javax.persistence.metamodel"/>
    <package name="javax.persistence.criteria"/>
    <package name="javax.persistence"/>
    <package name="javax.json.stream"/>
    <package name="javax.json.spi"/>
    <package name="javax.json"/>
    <package name="javax.inject"/>
    <package name="javax.enterprise.util"/>
    <package name="javax.enterprise.inject.spi"/>
    <package name="javax.enterprise.inject"/>
    <package name="javax.enterprise.event"/>
    <package name="javax.enterprise.context.spi"/>
    <package name="javax.enterprise.context"/>
    <package name="javax.decorator"/>
    <package name="javax.annotation.sql"/>
    <package name="javax.annotation.security"/>
    <package name="javax.annotation"/>
  <package name="commonj.work">
    <class name="RemoteWorkItem">
      <method name="getPinnedWorkManager()"/>
      <method name="release()"/>
    </class>
    <class name="Work">
      <method name="isDaemon()"/>
      <method name="release()"/>
    </class>
    <class name="WorkCompletedException">
      <method name="getExceptionList()"/>
    </class>
    <class name="WorkEvent">
      <method name="getException()"/>
      <method name="getWorkItem()"/>
      <method name="getType()"/>
      <field name="WORK_ACCEPTED"/>
      <field name="WORK_COMPLETED"/>
      <field name="WORK_REJECTED"/>
      <field name="WORK_STARTED"/>
    </class>
    <class name="WorkException" members="concealed"/>
    <class name="WorkItem">
      <method name="getResult()"/>
      <method name="getStatus()"/>
    </class>
    <class name="WorkListener">
      <method name="workAccepted(commonj.work.WorkEvent we)"/>
      <method name="workCompleted(commonj.work.WorkEvent we)"/>
      <method name="workRejected(commonj.work.WorkEvent we)"/>
      <method name="workStarted(commonj.work.WorkEvent we)"/>
    </class>
    <class name="WorkManager">
      <method name="waitForAll(java.util.Collection workItems,long timeout_ms)"/>
      <method name="schedule(commonj.work.Work work)"/>
      <method name="schedule(commonj.work.Work work,commonj.work.WorkListener wl)"/>
      <method name="waitForAny(java.util.Collection workItems,long timeout_ms)"/>
      <field name="IMMEDIATE"/>
      <field name="INDEFINITE"/>
    </class>
    <class name="WorkRejectedException" members="concealed"/>
  </package>
  <package name="weblogic.application">
    <class name="ApplicationContext">
      <method name="getApplicationId()"/>
      <method name="getApplicationName()"/>
      <method name="getApplicationSecurityRealmName()"/>
      <method name="getPartialApplicationId(boolean includePartitionName)"/>
      <method name="getAppDeploymentMBean()"/>
    </class>
    <class name="ApplicationException" members="concealed"/>
    <class name="ApplicationLifecycleEvent">
      <method name="isStaticOperation()"/>
      <method name="getApplicationContext()"/>
      <method name="getDeploymentOperation()"/>
    </class>
    <class name="ApplicationLifecycleListener">
      <field name="ApplicationLifecycleListener"/>
      <method name="postStart(weblogic.application.ApplicationLifecycleEvent evt)"/>
      <method name="postStop(weblogic.application.ApplicationLifecycleEvent evt)"/>
      <method name="preStart(weblogic.application.ApplicationLifecycleEvent evt)"/>
      <method name="preStop(weblogic.application.ApplicationLifecycleEvent evt)"/>
    </class>
    <class name="ApplicationVersionLifecycleEvent">
      <method name="isActiveVersion()"/>
      <method name="isAdminMode()"/>
      <method name="isOwnVersion()"/>
      <method name="isOwnVersionActive()"/>
      <method name="getApplicationId()"/>
      <method name="getApplicationName()"/>
      <method name="getArchiveVersion()"/>
      <method name="getLibImplVersion()"/>
      <method name="getLibSpecVersion()"/>
      <method name="getPlanVersion()"/>
      <method name="getVersionId()"/>
      <method name="toString()"/>
    </class>
    <class name="ApplicationVersionLifecycleListener">
      <field name="ApplicationVersionLifecycleListener"/>
      <method name="postDelete(weblogic.application.ApplicationVersionLifecycleEvent evt)"/>
      <method name="postDeploy(weblogic.application.ApplicationVersionLifecycleEvent evt)"/>
      <method name="preDeploy(weblogic.application.ApplicationVersionLifecycleEvent evt)"/>
      <method name="preUndeploy(weblogic.application.ApplicationVersionLifecycleEvent evt)"/>
    </class>
    <class name="DeploymentOperationType" members="concealed"/>
    <class name="MergedDescriptorModule">
      <method name="getDescriptorMappings()"/>
    </class>
  </package>
  <package name="weblogic.application.library">
    <class name="LibraryContext" members="concealed"/>
  </package>
  <package name="weblogic.common">
    <class name="CompletionListener">
      <method name="onCompletion(weblogic.common.CompletionRequest request,java.lang.Object result)"/>
      <method name="onException(weblogic.common.CompletionRequest request,java.lang.Throwable reason)"/>
    </class>
    <class name="CompletionRequest">
      <method name="hasResult()"/>
      <method name="removeListener(weblogic.common.CompletionListener listener)"/>
      <method name="runListenersInSetResult(boolean rlisr)"/>
      <method name="getResult()"/>
      <method name="addFirstListener(weblogic.common.CompletionListener listener)"/>
      <method name="addListener(weblogic.common.CompletionListener listener)"/>
      <method name="reset()"/>
      <method name="run()"/>
      <method name="setResult(java.lang.Object result)"/>
    </class>
    <class name="ProxyAuthenticator">
      <method name="getLoginAndPassword()"/>
      <field name="AUTHENTICATOR_PROPERTY"/>
      <method name="init(java.lang.String proxyHost,int proxyPort,java.lang.String authType,java.lang.String loginPrompt)"/>
    </class>
    <class name="ResourceException" members="concealed"/>
    <class name="WLObjectOutput">
      <method name="writeAbbrevString(java.lang.String s)"/>
      <method name="writeArrayList(java.util.ArrayList lst)"/>
      <method name="writeArrayOfObjects(java.lang.Object[] aoo)"/>
      <method name="writeBytes(byte[] val)"/>
      <method name="writeDate(java.util.Date dateval)"/>
      <method name="writeImmutable(java.lang.Object o)"/>
      <method name="writeObjectWL(java.lang.Object o)"/>
      <method name="writeProperties(java.util.Properties propval)"/>
      <method name="writeString(java.lang.String s)"/>
    </class>
  </package>
  <package name="weblogic.management.configuration">
    <class name="DeterminerCandidateResourceInfoVBean">
      <method name="isDeterminer()"/>
      <method name="getDisplayName()"/>
      <method name="getInternalName()"/>
      <method name="getResourceType()"/>
    </class>
    <class name="DomainMBeanValidator" members="concealed"/>
    <class name="DynamicServersConstants">
      <field name="MACHINE_MATCH_TYPE_NAME"/>
      <field name="MACHINE_MATCH_TYPE_TAG"/>
    </class>
    <class name="ExportCustomizeableValues">
      <field name="java.lang.annotation.Annotation"/>
    </class>
    <class name="JMSConstants">
      <field name="PRIORITY_DEFAULT"/>
      <field name="PRIORITY_MAXIMUM"/>
      <field name="PRIORITY_MINIMUM"/>
      <field name="ACKNOWLEDGE_ALL"/>
      <field name="ACKNOWLEDGE_MODE_AUTO"/>
      <field name="ACKNOWLEDGE_MODE_CLIENT"/>
      <field name="ACKNOWLEDGE_MODE_DUPS_OK"/>
      <field name="ACKNOWLEDGE_MODE_NONE"/>
      <field name="ACKNOWLEDGE_ONE"/>
      <field name="ACKNOWLEDGE_PREVIOUS"/>
      <field name="ALWAYSFORWARD"/>
      <field name="AT_LEAST_ONCE"/>
      <field name="AT_MOST_ONCE"/>
      <field name="AUTH_PRINS"/>
      <field name="CLIENT_ID_POLICY_UNRESTRICTED"/>
      <field name="CONSUMPTION_ENABLED"/>
      <field name="CONSUMPTION_PAUSED"/>
      <field name="CONSUMPTION_PAUSING"/>
      <field name="DESTINATION_TYPE_QUEUE"/>
      <field name="DESTINATION_TYPE_SAFID"/>
      <field name="DESTINATION_TYPE_TOPIC"/>
      <field name="DESTINATION_TYPE_UDQUEUE"/>
      <field name="DESTINATION_TYPE_UDTOPIC"/>
      <field name="DISABLED"/>
      <field name="DISCARD"/>
      <field name="ENABLED_DEFAULT"/>
      <field name="ENABLED_FALSE"/>
      <field name="ENABLED_TRUE"/>
      <field name="ERRORDESTINATION"/>
      <field name="EXACTLY_ONCE"/>
      <field name="EXPORT_TO_ALL"/>
      <field name="EXPORT_TO_NONE"/>
      <field name="FIFO"/>
      <field name="FORWARDING_POLICY_PARTITIONED"/>
      <field name="FORWARDING_POLICY_REPLICATED"/>
      <field name="INITIALCONTEXTFACTORY"/>
      <field name="INSERTION_ENABLED"/>
      <field name="INSERTION_PAUSED"/>
      <field name="INSERTION_PAUSING"/>
      <field name="KEEP_NEW"/>
      <field name="KEEP_OLD"/>
      <field name="KEY_DIRECTION_ASCENDING"/>
      <field name="KEY_DIRECTION_DESCENDING"/>
      <field name="KEY_TYPE_BOOLEAN"/>
      <field name="KEY_TYPE_BYTE"/>
      <field name="KEY_TYPE_DOUBLE"/>
      <field name="KEY_TYPE_FLOAT"/>
      <field name="KEY_TYPE_INT"/>
      <field name="KEY_TYPE_LONG"/>
      <field name="KEY_TYPE_SHORT"/>
      <field name="KEY_TYPE_STRING"/>
      <field name="LOGGING"/>
      <field name="NEVER"/>
      <field name="NON_PERSISTENT"/>
      <field name="NON_XML"/>
      <field name="NO_DELIVERY"/>
      <field name="NO_OVERRIDE"/>
      <field name="PAUSED_AT_STARTUP_DEFAULT"/>
      <field name="PAUSED_AT_STARTUP_FALSE"/>
      <field name="PERSISTENT"/>
      <field name="PREEMPTIVE"/>
      <field name="PRODUCTION_ENABLED"/>
      <field name="PRODUCTION_PAUSED"/>
      <field name="PRODUCTION_PAUSING"/>
      <field name="QUEUE"/>
      <field name="RANDOM"/>
      <field name="ROUND_ROBIN"/>
      <field name="SINGLE_MESSAGE"/>
      <field name="STORE_ENABLED_DEFAULT"/>
      <field name="STORE_ENABLED_FALSE"/>
      <field name="STORE_ENABLED_TRUE"/>
      <field name="STORE_TYPE_FILE"/>
      <field name="STORE_TYPE_JDBC"/>
      <field name="SUBSCRIPTION_EXCLUSIVE"/>
      <field name="SUBSCRIPTION_SHARABLE"/>
      <field name="SUPPORTS"/>
      <field name="SYNCWRITE_CACHEFLUSH"/>
      <field name="SYNCWRITE_DIRECTWRITE"/>
      <field name="SYNCWRITE_DISABLED"/>
      <field name="TOPIC"/>
      <field name="TOPIC_SUBSCRIBER_ONLY"/>
      <field name="TRANSACTION_MODE_51"/>
      <field name="TRANSACTION_MODE_NONE"/>
      <field name="TRANSACTION_MODE_XA"/>
      <field name="UNITOFORDER_STANDARD"/>
      <field name="UNITOFORDER_SYSTEM"/>
      <field name="XML"/>
      <field name="XMLALL"/>
      <field name="DEFAULT_MESSAGE_BUFFER_SIZE"/>
      <field name="SEND_QUOTA_BLOCKING_TIMEOUT"/>
    </class>
    <class name="PropertyValueVBean">
      <method name="isOriginalValueAssigned()"/>
      <method name="isOverridingConfigBeanValueAssigned()"/>
      <method name="isResourceDeploymentPlanValueAssigned()"/>
      <method name="getDefaultValue()"/>
      <method name="getOriginalValue()"/>
      <method name="getOverridingConfigBeanValue()"/>
      <method name="getResourceDeploymentPlanValue()"/>
      <method name="getEffectiveValueName()"/>
      <field name="ORIGIN_DEFAULT"/>
      <field name="ORIGIN_ORIGINAL"/>
      <field name="ORIGIN_OVERRIDING_CONFIG_BEAN"/>
      <field name="ORIGIN_RESOURCE_DEPLOYMENT_PLAN"/>
    </class>
    <class name="SimplePropertyValueVBean">
      <method name="getEffectiveValue()"/>
      <method name="getPropertyName()"/>
    </class>
    <class name="SingleTargetOnly">
      <field name="java.lang.annotation.Annotation"/>
    </class>
  </package>
  <package name="weblogic.management.configuration.util">
    <class name="PartitionManagerInterceptorAdapter" members="concealed"/>
    <class name="PartitionManagerPartitionAPI">
      <field name="java.lang.annotation.Annotation"/>
    </class>
    <class name="PartitionManagerResourceGroupAPI">
      <field name="java.lang.annotation.Annotation"/>
    </class>
    <class name="ResourceGroupManagerInterceptorAdapter" members="concealed"/>
    <class name="ServerServiceInterceptor">
      <field name="java.lang.annotation.Annotation"/>
    </class>
    <class name="Setup">
      <field name="java.lang.annotation.Annotation"/>
    </class>
    <class name="Teardown">
      <field name="java.lang.annotation.Annotation"/>
    </class>
  </package>
  <package name="weblogic.server">
    <class name="PartitionInterceptorServiceAPI">
      <field name="java.lang.annotation.Annotation"/>
    </class>
  </package>
  <package name="weblogic.utils">
    <class name="ErrorCollectionException">
      <method name="isEmpty()"/>
      <method name="size()"/>
      <method name="getBaseMessage()"/>
      <method name="getMessage()"/>
      <method name="getExceptions()"/>
      <method name="getErrors()"/>
      <method name="add(java.lang.Throwable th)"/>
      <method name="addCollection(weblogic.utils.ErrorCollectionException exceptionCollection)"/>
      <method name="addError(java.lang.Throwable th)"/>
      <method name="printStackTrace()"/>
      <method name="printStackTrace(java.io.PrintStream p)"/>
      <method name="printStackTrace(java.io.PrintWriter w)"/>
    </class>
    <class name="NestedException">
      <method name="getMessage()"/>
      <method name="superToString()"/>
      <method name="toString()"/>
      <method name="getNested()"/>
      <method name="getNestedException()"/>
      <field name="nested"/>
      <method name="printStackTrace()"/>
      <method name="printStackTrace(java.io.PrintStream s)"/>
      <method name="printStackTrace(java.io.PrintWriter w)"/>
      <method name="superPrintStackTrace(java.io.PrintStream ps)"/>
      <method name="superPrintStackTrace(java.io.PrintWriter pw)"/>
    </class>
    <class name="NestedRuntimeException">
      <method name="superToString()"/>
      <method name="toString()"/>
      <method name="getNested()"/>
      <method name="getNestedException()"/>
      <method name="initCause(java.lang.Throwable t)"/>
      <method name="printStackTrace()"/>
      <method name="printStackTrace(java.io.PrintStream s)"/>
      <method name="printStackTrace(java.io.PrintWriter w)"/>
      <method name="superPrintStackTrace(java.io.PrintStream ps)"/>
      <method name="superPrintStackTrace(java.io.PrintWriter pw)"/>
    </class>
    <class name="NestedThrowable">
      <method name="superToString()"/>
      <method name="getNested()"/>
      <method name="superPrintStackTrace(java.io.PrintStream ps)"/>
      <method name="superPrintStackTrace(java.io.PrintWriter po)"/>
    </class>
  </package>
  <package name="weblogic.utils.collections">
    <class name="CircularQueue">
      <method name="remove()"/>
      <method name="add(E obj)"/>
      <method name="isEmpty()"/>
      <method name="capacity()"/>
      <method name="size()"/>
      <method name="clone()"/>
      <method name="peek()"/>
      <method name="toString()"/>
      <method name="iterator()"/>
      <method name="clear()"/>
    </class>
  </package>
  <package name="weblogic.utils.encoders">
    <class name="BASE64Decoder" members="concealed"/>
    <class name="BASE64Encoder" members="concealed"/>
    <class name="CharacterDecoder">
      <field name="CharacterDecoder"/>
      <method name="decodeBuffer(java.io.InputStream in)"/>
      <method name="decodeBuffer(java.lang.String inputString)"/>
    </class>
    <class name="CharacterEncoder">
      <field name="CharacterEncoder"/>
      <method name="encodeBuffer(byte[] aBuffer)"/>
      <method name="encodeBuffer(java.io.InputStream inStream,java.io.OutputStream outStream)"/>
    </class>
  </package>
  <package name="weblogic.xml.util">
    <class name="WhitespaceUtils">
      <method name="collapse(java.lang.String in_str)"/>
    </class>
  </package>
</lib-exports>
